<Page
    x:Class="LunchScheduler.Views.OptionsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:LunchScheduler.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="using:LunchScheduler.ViewModels"
    mc:Ignorable="d">
    
    <Page.DataContext>
        <viewModels:OptionsViewModel x:Name="ViewModel"/>
    </Page.DataContext>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid x:Name="HeaderGrid"
              Background="{ThemeResource AppBarSeparatorForegroundThemeBrush}"
              Height="48" />

        <Grid x:Name="StatusGrid" Background="{Binding CurrentStatusBrush}" Padding="10" Grid.Row="1">
            <StackPanel>
                <TextBlock Text="Reminders Background Task Status"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontWeight="SemiBold"
                           Foreground="White" />
                <TextBlock Text="{Binding CurrentStatus}"
                           TextWrapping="Wrap"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Foreground="White" />
            </StackPanel>
            
        </Grid>
        
        <StackPanel x:Name="OptionsPanel"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    Grid.Row="2"
                    Margin="20">
            <ToggleSwitch Header="Lunch Reminders" IsOn="{Binding IsBackgroundTaskEnabled, Mode=TwoWay}"/>
            <ComboBox x:Name="FrequencyComboBox"
                      Visibility="{Binding IsBackgroundTaskEnabled, Converter={StaticResource BoolToVisibilityConverter}}"
                      ItemsSource="{Binding MonitorTimeWindows}"
                      SelectedItem="{Binding SelectedMonitorTimeWindow, Mode=TwoWay}"
                      Header="Time window to remind me when I have an upcoming lunch (in minutes)"
                      Margin="0,0,0,20"
                      HorizontalAlignment="Left">
                <ComboBox.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" TextWrapping="Wrap"/>
                    </DataTemplate>
                </ComboBox.HeaderTemplate>
            </ComboBox>
            
        </StackPanel>
        
        <StackPanel Grid.Row="3">
            <TextBlock Text="{Binding LastTaskStatusMessage}"
                       TextWrapping="Wrap"
                       Visibility="{Binding LastTaskStatusMessage, Converter={StaticResource NullToVisibilityConverter}}" 
                       Margin="10"/>
            <Button x:Name="CheckStatusButton"
                    Content="check background task status"
                    Click="{x:Bind ViewModel.GetStatusButton_OnClick}"
                    Margin="10"/>
            
        </StackPanel>

        <Grid x:Name="BusyOverlayGrid"
              Visibility="{Binding IsBusy}"
              Background="{ThemeResource ListViewItemBackgroundSelectedPressed}"
              Grid.Row="0"
              Grid.RowSpan="4">
            <StackPanel HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                <ProgressRing IsActive="{Binding IsBusy}"
                              Foreground="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                              Width="100"
                              Height="100" />
                <TextBlock Text="{Binding IsBusyMessage}"
                           Foreground="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                           HorizontalAlignment="Center" />
            </StackPanel>
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="wideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="641" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderGrid.Visibility"
                                Value="Collapsed" />
                        <Setter Target="CheckStatusButton.HorizontalAlignment"
                                Value="Left" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="narrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="HeaderGrid.Visibility"
                                Value="Visible" />
                        <Setter Target="CheckStatusButton.HorizontalAlignment"
                                Value="Stretch" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</Page>
